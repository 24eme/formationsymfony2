---

- name: "modules debian installés"
  apt: name={{item}} state=latest update_cache=yes force=yes
  become: yes
  with_items:
  - iceweasel
  - iceweasel-l10n-fr
  - vim
  - curl
  - apache2
  - libapache2-mod-php5
  - php5-mysql
  - mysql-server
  - phpmyadmin
  - sudo
  - git
  - recode
  - rsync
  - gvfs-bin

- name: Téléchargement python-mysqldb
  get_url: url=http://ftp.fr.debian.org/debian/pool/main/p/python-mysqldb/python-mysqldb_1.2.3-2.1_amd64.deb dest=/tmp/python-mysqldb_1.2.3-2.1_amd64.deb

- name: Installation python-mysqldb
  apt: deb="/tmp/python-mysqldb_1.2.3-2.1_amd64.deb"
  become: yes

- name: "bonne version git"
  git: repo=https://github.com/24eme/formationsymfony2.git
    dest={{ project_folder }}
    update=yes clone=yes version=master remote=master

- name: "cache and log created"
  become: yes
  file: path={{symfony_folder}}/{{item}} state=directory
  with_items:
  - app/cache
  - app/logs

- name: Set cache folder permissions
  become: yes
  shell: >
    setfacl -R -m u:www-data:rwX -m u:{{ user }}:rwX {{symfony_folder}}/app/cache {{symfony_folder}}/app/logs
    setfacl -dR -m u:www-data:rwX -m u:{{ user }}:rwX {{symfony_folder}}/app/cache {{symfony_folder}}/app/logs

- name: "Configuration php apache2 datetimezone"
  become: yes
  ini_file: dest=/etc/php5/apache2/php.ini section=Date option=date.timezone value=Europe/Paris

- name: "Configuration php cli datetimezone"
  become: yes
  ini_file: dest=/etc/php5/cli/php.ini section=Date option=date.timezone value=Europe/Paris

- name: install composer
  become: yes
  shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin creates=/usr/local/bin/composer

- name: rename composer.phar to composer
  become: yes
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer creates=/usr/local/bin/composer

- name: make composer executable
  become: yes
  file: path=/usr/local/bin/composer mode=a+x state=file

- name: "installation du projet via composer"
  composer: command=install no_scripts="yes" no_dev="no" working_dir={{symfony_folder}}

- name: mysql est démarré
  become: yes
  service: name=mysql state=started

- name: configuration de mysql
  become: yes
  mysql_user: name={{ user }} host=localhost password={{ mysql_root_pass }} priv=*.*:ALL,GRANT

- name: Add default username and password for MySQL connection.
  become: yes
  lineinfile: >
    dest=/etc/phpmyadmin/config.inc.php
    state=present
    regexp="^.+\['{{ item.key }}'\].+$"
    line="$cfg['Servers'][$i]['{{ item.key }}'] = '{{ item.value }}';"
    insertbefore="^\?>"
  with_items:
  - { key: host, value: "localhost" }
  - { key: port, value: "3306" }
  - { key: user, value: "{{ user }}" }
  - { key: password, value: "{{ mysql_root_pass }}"}

- name: "Configuration apache"
  template: src=apache.conf.j2 dest=/etc/apache2/sites-available/000-default.conf
  become: yes
  notify: reload apache

- name: "Apache modules"
  become: yes
  apache2_module: state=present name={{item}}
  with_items:
   - rewrite
   - vhost_alias
  notify: reload apache

- name: "Configuration symfony"
  template: src=parameters.yml.j2 dest={{ symfony_folder }}/app/config/parameters.yml

- name: "Chargement des données initiales en base de données"
  shell: cd {{ symfony_folder }}; php app/console cache:clear; php app/console cache:clear --env=prod; php app/console doctrine:database:create; php app/console doctrine:schema:update --force; php app/console doctrine:fixtures:load -n;

- name: Téléchargement atomeditor
  get_url: url=https://atom.io/download/deb dest=/tmp/atomeditor.deb

- name: Installation atomeditor
  apt: deb="/tmp/atomeditor.deb"
  become: yes
